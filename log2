nohup: ignoring input
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 6): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 3): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 4): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 1): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 0): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 5): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 5
2023-02-20 20:37:34 | INFO | fairseq.distributed.utils | distributed init (rank 2): tcp://localhost:11228
2023-02-20 20:37:34 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 2
2023-02-20 20:37:35 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 6
2023-02-20 20:37:35 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 3
2023-02-20 20:37:35 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 4
2023-02-20 20:37:35 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 1
2023-02-20 20:37:35 | INFO | root | Added key: store_based_barrier_key:1 to store for rank: 0
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 0
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 5
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 1
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 3
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 2
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 6
2023-02-20 20:37:35 | INFO | fairseq.distributed.utils | initialized host ubuntu as rank 4
dummy test all-reduce success!
2023-02-20 20:37:41 | INFO | fairseq_cli.train | nvidia-smi stats: {'gpu_0_mem_used_gb': 1.1171875, 'gpu_1_mem_used_gb': 1.1171875, 'gpu_2_mem_used_gb': 1.1171875, 'gpu_3_mem_used_gb': 1.1171875, 'gpu_4_mem_used_gb': 1.1171875, 'gpu_5_mem_used_gb': 1.1171875, 'gpu_6_mem_used_gb': 1.1171875}
2023-02-20 20:37:41 | INFO | fairseq_cli.train | {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 10, 'log_format': 'json', 'log_file': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': True, 'fp16_init_scale': 128, 'fp16_scale_window': None, 'fp16_scale_tolerance': 0.0, 'min_loss_scale': 0.0001, 'threshold_loss_scale': None, 'user_dir': 'scomoe', 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma', 'log_nvidia_smi': False}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None, 'is_moe': False}, 'distributed_training': {'_name': None, 'distributed_world_size': 7, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': 'tcp://localhost:11228', 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'fully_sharded', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_algorithm': 'LocalSGD', 'localsgd_frequency': 3, 'nprocs_per_node': 7, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': True, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'distributed_ifname_list': '', 'distributed_gpu_list': '', 'distributed_num_procs': 7}, 'dataset': {'_name': None, 'num_workers': 1, 'num_workers_valid': 0, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 4096, 'batch_size': None, 'required_batch_size_multiple': 8, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': True, 'max_tokens_valid': 4096, 'batch_size_valid': None, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0}, 'optimization': {'_name': None, 'max_epoch': 1, 'max_update': 0, 'stop_time_hours': 0.0, 'clip_norm': 1.0, 'sentence_avg': False, 'update_freq': [1], 'lr': [0.0005], 'stop_min_lr': -1.0, 'use_bmuf': False}, 'checkpoint': {'_name': None, 'save_dir': 'checkpoints', 'restore_file': 'checkpoint_last.pt', 'finetune_from_model': None, 'reset_dataloader': False, 'reset_lr_scheduler': False, 'reset_meters': False, 'reset_optimizer': False, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': -1, 'no_save': True, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_best_checkpoints': False, 'no_save_optimizer_state': False, 'no_save_optimizer_state_on_training_finished': False, 'symlink_best_and_last_checkpoints': False, 'best_checkpoint_metric': 'loss', 'maximize_best_checkpoint_metric': False, 'patience': -1, 'checkpoint_suffix': '-rank-0', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 's3_upload_path': None, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 7}, 'generation': {'_name': None, 'beam': 5, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'assignment_type': 'none'}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807, 'stats_path': None, 'max_valid_steps': None}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': Namespace(_name='transformer', activation_dropout=0.0, activation_fn='relu', adam_betas='(0.9, 0.98)', adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, alternate_ffn_embed_dim=0, arch='transformer', attention_dropout=0.0, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='loss', bf16=False, block_wise=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, capacity_factor=1.0, checkpoint_activations=False, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=1.0, combine_valid_subsets=None, cpu=False, cpu_offload=False, criterion='moe_cross_entropy', cross_self_attention=False, curriculum=0, data_buffer_size=10, dataset_impl=None, dataset_size=500000, ddp_backend='fully_sharded', decoder_attention_heads=8, decoder_embed_dim=512, decoder_embed_path=None, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=False, decoder_moe_freq=0, decoder_moe_top1_expert=False, decoder_normalize_before=True, decoder_output_dim=512, device_id=0, dict_size=49996, disable_validation=True, distributed_backend='nccl', distributed_gpu_list='', distributed_ifname_list='', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=7, dropout=0.3, dummy_a2a=False, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_embed_path=None, encoder_ffn_embed_dim=2048, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=False, encoder_moe_freq=0, encoder_moe_top1_expert=False, encoder_normalize_before=True, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=True, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=True, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', heartbeat_timeout=-1, ignore_unused_valid_subsets=False, is_moe=False, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, layernorm_embedding=False, load_checkpoint_on_all_dp_ranks=False, localsgd_frequency=3, log_file=None, log_format='json', log_interval=10, log_nvidia_smi=False, lr=[0.0005], lr_scheduler='inverse_sqrt', max_epoch=1, max_tokens=4096, max_tokens_valid=4096, max_update=0, max_valid_steps=None, maximize_best_checkpoint_metric=False, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_params_to_wrap=100000000, model_parallel_size=1, moe_batch_prioritized_routing=True, moe_eval_capacity_token_fraction=0.25, moe_expert_count=7, moe_expert_ffn_dim=0, moe_freq=2, moe_gate_loss_combine_method='sum', moe_gate_loss_transform='none', moe_gate_loss_wt=0.01, moe_gating_use_fp32=True, moe_normalize_expert_grad='sqrt_world_size', moe_normalize_gate_prob_before_dropping=False, moe_second_expert_policy='all', moe_top1_expert=False, no_best_checkpoints=False, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=True, no_save_optimizer_state=False, no_save_optimizer_state_on_training_finished=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=7, num_shards=1, num_workers=1, num_workers_valid=0, offload_activations=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, record_a2a_perf_stats=True, record_token_expert=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', s3_upload_path=None, save_dir='checkpoints', save_interval=1, save_interval_updates=0, scale_for_route=1.0, scoring='bleu', seed=1, selected_expert_count=2, sentence_avg=False, shard_id=0, share_all_embeddings=False, share_decoder_input_output_embed=True, simul_type=None, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, src_len=30, stop_min_lr=-1.0, stop_time_hours=0, suppress_crashes=False, symlink_best_and_last_checkpoints=False, task='dummy_mt', tensorboard_logdir=None, tgt_len=30, threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tpu=False, train_subset='train', unk=3, update_freq=[1], use_bmuf=False, use_moe_pad_mask=True, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, use_tutel=False, use_tutel_all2all=False, user_dir='scomoe', valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=4000, weight_decay=0.0001, write_checkpoints_asynchronously=False, zero_sharding='none'), 'task': Namespace(_name='dummy_mt', activation_dropout=0.0, activation_fn='relu', adam_betas='(0.9, 0.98)', adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, alternate_ffn_embed_dim=0, arch='transformer', attention_dropout=0.0, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='loss', bf16=False, block_wise=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, capacity_factor=1.0, checkpoint_activations=False, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=1.0, combine_valid_subsets=None, cpu=False, cpu_offload=False, criterion='moe_cross_entropy', cross_self_attention=False, curriculum=0, data_buffer_size=10, dataset_impl=None, dataset_size=500000, ddp_backend='fully_sharded', decoder_attention_heads=8, decoder_embed_dim=512, decoder_embed_path=None, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=False, decoder_moe_freq=0, decoder_moe_top1_expert=False, decoder_normalize_before=True, decoder_output_dim=512, device_id=0, dict_size=49996, disable_validation=True, distributed_backend='nccl', distributed_gpu_list='', distributed_ifname_list='', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=7, dropout=0.3, dummy_a2a=False, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_embed_path=None, encoder_ffn_embed_dim=2048, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=False, encoder_moe_freq=0, encoder_moe_top1_expert=False, encoder_normalize_before=True, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=True, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=True, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', heartbeat_timeout=-1, ignore_unused_valid_subsets=False, is_moe=False, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, layernorm_embedding=False, load_checkpoint_on_all_dp_ranks=False, localsgd_frequency=3, log_file=None, log_format='json', log_interval=10, log_nvidia_smi=False, lr=[0.0005], lr_scheduler='inverse_sqrt', max_epoch=1, max_tokens=4096, max_tokens_valid=4096, max_update=0, max_valid_steps=None, maximize_best_checkpoint_metric=False, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_params_to_wrap=100000000, model_parallel_size=1, moe_batch_prioritized_routing=True, moe_eval_capacity_token_fraction=0.25, moe_expert_count=7, moe_expert_ffn_dim=0, moe_freq=2, moe_gate_loss_combine_method='sum', moe_gate_loss_transform='none', moe_gate_loss_wt=0.01, moe_gating_use_fp32=True, moe_normalize_expert_grad='sqrt_world_size', moe_normalize_gate_prob_before_dropping=False, moe_second_expert_policy='all', moe_top1_expert=False, no_best_checkpoints=False, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=True, no_save_optimizer_state=False, no_save_optimizer_state_on_training_finished=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=7, num_shards=1, num_workers=1, num_workers_valid=0, offload_activations=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, record_a2a_perf_stats=True, record_token_expert=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', s3_upload_path=None, save_dir='checkpoints', save_interval=1, save_interval_updates=0, scale_for_route=1.0, scoring='bleu', seed=1, selected_expert_count=2, sentence_avg=False, shard_id=0, share_all_embeddings=False, share_decoder_input_output_embed=True, simul_type=None, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, src_len=30, stop_min_lr=-1.0, stop_time_hours=0, suppress_crashes=False, symlink_best_and_last_checkpoints=False, task='dummy_mt', tensorboard_logdir=None, tgt_len=30, threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tpu=False, train_subset='train', unk=3, update_freq=[1], use_bmuf=False, use_moe_pad_mask=True, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, use_tutel=False, use_tutel_all2all=False, user_dir='scomoe', valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=4000, weight_decay=0.0001, write_checkpoints_asynchronously=False, zero_sharding='none'), 'criterion': {'_name': 'moe_cross_entropy', 'moe_gate_loss_wt': 0.01, 'moe_gate_loss_combine_method': 'sum', 'moe_gate_loss_transform': 'none', 'sentence_avg': False}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9, 0.98)', 'adam_eps': 1e-08, 'weight_decay': 0.0001, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [0.0005], 'block_wise': False}, 'lr_scheduler': {'_name': 'inverse_sqrt', 'warmup_updates': 4000, 'warmup_init_lr': -1.0, 'lr': [0.0005]}, 'scoring': {'_name': 'bleu', 'pad': 1, 'eos': 2, 'unk': 3}, 'bpe': None, 'tokenizer': None, 'simul_type': None}
2023-02-20 20:37:41 | INFO | fairseq.benchmark.dummy_mt | dictionary: 50000 types
2023-02-20 20:37:41 | INFO | root | Added key: store_based_barrier_key:2 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:3 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:4 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:5 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:6 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:7 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:8 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:9 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:10 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:11 to store for rank: 0
2023-02-20 20:37:42 | INFO | root | Added key: store_based_barrier_key:12 to store for rank: 0
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:42 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:43 | WARNING | root | Rolled back to use the default process group for the reduce scatter operation because the reduce_scatter process group size is 7, which is different with the world size 1. Please make sure the process_group parameter uses all the available ranks for the optimal performance.
2023-02-20 20:37:45 | INFO | fairseq_cli.train | FullyShardedDataParallel(
  world_size=7, flatten_parameters=True, mixed_precision=True, 
  (_fsdp_wrapped_module): FlattenParamsWrapper(
    (_fpw_module): TransformerModel(
      (encoder): TransformerEncoder(
        (dropout_module): FairseqDropout(p=0.3)
        (embed_tokens): Embedding(50000, 512, padding_idx=1)
        (embed_positions): SinusoidalPositionalEmbedding()
        (layers): ModuleList(
          (0): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (2): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (3): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (4): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (5): TransformerEncoderLayer(
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (dropout_module): FairseqDropout(p=0.3)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (decoder): TransformerDecoder(
        (dropout_module): FairseqDropout(p=0.3)
        (embed_tokens): Embedding(50000, 512, padding_idx=1)
        (embed_positions): SinusoidalPositionalEmbedding()
        (layers): ModuleList(
          (0): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (2): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (3): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (4): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (activation_dropout_module): FairseqDropout(p=0.0)
            (fc1): Linear(in_features=512, out_features=2048, bias=True)
            (fc2): Linear(in_features=2048, out_features=512, bias=True)
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (5): TransformerDecoderLayer(
            (dropout_module): FairseqDropout(p=0.3)
            (self_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (encoder_attn): MultiheadAttention(
              (dropout_module): FairseqDropout(p=0.0)
              (k_proj): Linear(in_features=512, out_features=512, bias=True)
              (v_proj): Linear(in_features=512, out_features=512, bias=True)
              (q_proj): Linear(in_features=512, out_features=512, bias=True)
              (out_proj): Linear(in_features=512, out_features=512, bias=True)
            )
            (encoder_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (moe_layer): MOELayer(
              (gate): Top2Gate(
                (wg): Linear(in_features=512, out_features=7, bias=False)
              )
              (experts): ModuleList(
                (0): FullyShardedDataParallel(
                  world_size=1, flatten_parameters=True, mixed_precision=True, 
                  (_fsdp_wrapped_module): FlattenParamsWrapper(
                    (_fpw_module): FeedForwardNetwork(
                      (activation_dropout_module): FairseqDropout(p=0.0)
                      (fc1): Linear(in_features=512, out_features=2048, bias=True)
                      (fc2): Linear(in_features=2048, out_features=512, bias=True)
                      (dropout_module): FairseqDropout(p=0.3)
                    )
                  )
                )
              )
            )
            (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (output_projection): Linear(in_features=512, out_features=50000, bias=False)
      )
    )
  )
)
2023-02-20 20:37:45 | INFO | fairseq_cli.train | task: DummyMTTask
2023-02-20 20:37:45 | INFO | fairseq_cli.train | model: FullyShardedDataParallel
2023-02-20 20:37:45 | INFO | fairseq_cli.train | criterion: MoECrossEntropyCriterion
2023-02-20 20:37:45 | INFO | fairseq_cli.train | num. non-expert model params: 82,763,776 (num. trained: 82,763,776)
2023-02-20 20:37:45 | INFO | fairseq_cli.train | num. expert model params: 12,598,272 (num. trained: 12,598,272)
2023-02-20 20:37:45 | INFO | fairseq_cli.train | nvidia-smi stats: {'gpu_0_mem_used_gb': 1.1171875, 'gpu_1_mem_used_gb': 1.1171875, 'gpu_2_mem_used_gb': 1.1171875, 'gpu_3_mem_used_gb': 1.1171875, 'gpu_4_mem_used_gb': 1.1171875, 'gpu_5_mem_used_gb': 1.1171875, 'gpu_6_mem_used_gb': 1.1171875}
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.encoder.layers.3.moe_layer.gate.wg.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.encoder.layers.5.moe_layer.gate.wg.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.decoder.layers.1.moe_layer.gate.wg.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.decoder.layers.3.moe_layer.gate.wg.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.decoder.layers.5.moe_layer.gate.wg.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | detected shared parameter: _fsdp_wrapped_module._fpw_module.encoder.layers.1.moe_layer.gate.wg.bias <- _fsdp_wrapped_module._fpw_module.decoder.output_projection.bias
2023-02-20 20:37:45 | INFO | fairseq.trainer | nvidia-smi stats: {'gpu_0_mem_used_gb': 1.1171875, 'gpu_1_mem_used_gb': 1.1171875, 'gpu_2_mem_used_gb': 1.1171875, 'gpu_3_mem_used_gb': 1.1171875, 'gpu_4_mem_used_gb': 1.1171875, 'gpu_5_mem_used_gb': 1.1171875, 'gpu_6_mem_used_gb': 1.1171875}
2023-02-20 20:37:46 | INFO | fairseq.utils | ***********************CUDA enviroments for all 7 workers***********************
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   0: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   1: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   2: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   3: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   4: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   5: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | rank   6: capabilities =  7.5  ; total memory = 23.653 GB ; name = NVIDIA TITAN RTX                        
2023-02-20 20:37:46 | INFO | fairseq.utils | ***********************CUDA enviroments for all 7 workers***********************
2023-02-20 20:37:46 | INFO | fairseq_cli.train | training on 7 devices (GPUs/TPUs)
2023-02-20 20:37:46 | INFO | fairseq_cli.train | max tokens per GPU = 4096 and batch size per GPU = None
2023-02-20 20:37:46 | INFO | fairseq_cli.train | nvidia-smi stats: {'gpu_0_mem_used_gb': 1.1171875, 'gpu_1_mem_used_gb': 1.1171875, 'gpu_2_mem_used_gb': 1.1171875, 'gpu_3_mem_used_gb': 1.1171875, 'gpu_4_mem_used_gb': 1.1171875, 'gpu_5_mem_used_gb': 1.1171875, 'gpu_6_mem_used_gb': 1.1171875}
2023-02-20 20:37:46 | INFO | fairseq.trainer | No existing checkpoint found checkpoints/checkpoint_last-rank-0-shard0.pt
2023-02-20 20:37:46 | INFO | fairseq.trainer | loading train data for epoch 1
2023-02-20 20:37:47 | INFO | fairseq.trainer | begin training epoch 1
2023-02-20 20:37:47 | INFO | fairseq_cli.train | Start iterating over samples
2023-02-20 20:37:51 | INFO | fairseq.trainer | NOTE: gradient overflow detected, ignoring gradient, setting loss scale to: 64.0
2023-02-20 20:37:52 | INFO | fairseq.trainer | NOTE: gradient overflow detected, ignoring gradient, setting loss scale to: 32.0
2023-02-20 20:37:53 | INFO | fairseq.trainer | NOTE: gradient overflow detected, ignoring gradient, setting loss scale to: 16.0
2023-02-20 20:38:02 | INFO | train_inner | {"epoch": 1, "update": 0.025, "loss": "2.851", "moe_gate_loss": "7.46356", "overflow_expert1": "13.152", "overflow_expert2": "38.238", "entropy_gating": "1.812", "expert1_balance_top": "62.56", "expert1_balance_bottom": "8.931", "unused_expert1_count": "0", "expert2_balance_top": "45.322", "expert2_balance_bottom": "14.808", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.387", "all_to_all_cuda_time_ms": "4.376", "unrouted_token_rate": "0.039", "sparsity": "0", "inner_loss": "2.743", "ppl": "6.7", "wps": "36097.4", "ups": "1.26", "wpb": "28560", "bsz": "952", "num_updates": "10", "lr": "1.25e-06", "gnorm": "13.447", "clip": "100", "loss_scale": "16", "train_wall": "13", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "16"}
2023-02-20 20:38:09 | INFO | train_inner | {"epoch": 1, "update": 0.044, "loss": "2.195", "moe_gate_loss": "7.41784", "overflow_expert1": "12.672", "overflow_expert2": "37.141", "entropy_gating": "1.81", "expert1_balance_top": "61.537", "expert1_balance_bottom": "9.293", "unused_expert1_count": "0", "expert2_balance_top": "44.745", "expert2_balance_bottom": "15.308", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.37", "all_to_all_cuda_time_ms": "4.505", "unrouted_token_rate": "0.034", "sparsity": "0", "inner_loss": "2.088", "ppl": "4.25", "wps": "36558.2", "ups": "1.28", "wpb": "28560", "bsz": "952", "num_updates": "20", "lr": "2.5e-06", "gnorm": "11.145", "clip": "100", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "24"}
2023-02-20 20:38:17 | INFO | train_inner | {"epoch": 1, "update": 0.063, "loss": "1.266", "moe_gate_loss": "7.31522", "overflow_expert1": "11.234", "overflow_expert2": "36.642", "entropy_gating": "1.808", "expert1_balance_top": "59.136", "expert1_balance_bottom": "9.844", "unused_expert1_count": "0", "expert2_balance_top": "43.988", "expert2_balance_bottom": "15.565", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.358", "all_to_all_cuda_time_ms": "4.432", "unrouted_token_rate": "0.031", "sparsity": "0", "inner_loss": "1.16", "ppl": "2.23", "wps": "36469.4", "ups": "1.28", "wpb": "28560", "bsz": "952", "num_updates": "30", "lr": "3.75e-06", "gnorm": "6.056", "clip": "100", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "32"}
2023-02-20 20:38:25 | INFO | train_inner | {"epoch": 1, "update": 0.082, "loss": "0.672", "moe_gate_loss": "7.10298", "overflow_expert1": "8.494", "overflow_expert2": "36.491", "entropy_gating": "1.808", "expert1_balance_top": "55.305", "expert1_balance_bottom": "10.29", "unused_expert1_count": "0", "expert2_balance_top": "42.698", "expert2_balance_bottom": "15.78", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.363", "all_to_all_cuda_time_ms": "4.368", "unrouted_token_rate": "0.025", "sparsity": "0", "inner_loss": "0.569", "ppl": "1.48", "wps": "36708.7", "ups": "1.29", "wpb": "28560", "bsz": "952", "num_updates": "40", "lr": "5e-06", "gnorm": "2.422", "clip": "100", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "40"}
2023-02-20 20:38:33 | INFO | train_inner | {"epoch": 1, "update": 0.101, "loss": "0.396", "moe_gate_loss": "6.75187", "overflow_expert1": "4.103", "overflow_expert2": "34.704", "entropy_gating": "1.813", "expert1_balance_top": "50.456", "expert1_balance_bottom": "11.736", "unused_expert1_count": "0", "expert2_balance_top": "41.076", "expert2_balance_bottom": "16.732", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.365", "all_to_all_cuda_time_ms": "4.525", "unrouted_token_rate": "0.014", "sparsity": "0", "inner_loss": "0.299", "ppl": "1.23", "wps": "36501", "ups": "1.28", "wpb": "28560", "bsz": "952", "num_updates": "50", "lr": "6.25e-06", "gnorm": "1.208", "clip": "70", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "47"}
2023-02-20 20:38:41 | INFO | train_inner | {"epoch": 1, "update": 0.12, "loss": "0.244", "moe_gate_loss": "6.41555", "overflow_expert1": "1.477", "overflow_expert2": "27.121", "entropy_gating": "1.819", "expert1_balance_top": "44.591", "expert1_balance_bottom": "15.329", "unused_expert1_count": "0", "expert2_balance_top": "37.692", "expert2_balance_bottom": "19.6", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.36", "all_to_all_cuda_time_ms": "4.322", "unrouted_token_rate": "0.005", "sparsity": "0", "inner_loss": "0.151", "ppl": "1.11", "wps": "36747.9", "ups": "1.29", "wpb": "28560", "bsz": "952", "num_updates": "60", "lr": "7.5e-06", "gnorm": "0.608", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "55"}
2023-02-20 20:38:49 | INFO | train_inner | {"epoch": 1, "update": 0.139, "loss": "0.171", "moe_gate_loss": "6.22567", "overflow_expert1": "0.535", "overflow_expert2": "20.55", "entropy_gating": "1.821", "expert1_balance_top": "39.887", "expert1_balance_bottom": "18.655", "unused_expert1_count": "0", "expert2_balance_top": "35.718", "expert2_balance_bottom": "21.595", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.353", "all_to_all_cuda_time_ms": "4.401", "unrouted_token_rate": "0.002", "sparsity": "0", "inner_loss": "0.081", "ppl": "1.06", "wps": "36353", "ups": "1.27", "wpb": "28560", "bsz": "952", "num_updates": "70", "lr": "8.75e-06", "gnorm": "0.322", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "63"}
2023-02-20 20:38:56 | INFO | train_inner | {"epoch": 1, "update": 0.158, "loss": "0.136", "moe_gate_loss": "6.11977", "overflow_expert1": "0.012", "overflow_expert2": "14.339", "entropy_gating": "1.822", "expert1_balance_top": "36.578", "expert1_balance_bottom": "21.221", "unused_expert1_count": "0", "expert2_balance_top": "34.449", "expert2_balance_bottom": "23.218", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.348", "all_to_all_cuda_time_ms": "4.083", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.048", "ppl": "1.03", "wps": "36206.5", "ups": "1.27", "wpb": "28560", "bsz": "952", "num_updates": "80", "lr": "1e-05", "gnorm": "0.188", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "71"}
2023-02-20 20:39:04 | INFO | train_inner | {"epoch": 1, "update": 0.177, "loss": "0.119", "moe_gate_loss": "6.05935", "overflow_expert1": "0", "overflow_expert2": "9.983", "entropy_gating": "1.821", "expert1_balance_top": "33.923", "expert1_balance_bottom": "23.294", "unused_expert1_count": "0", "expert2_balance_top": "33.654", "expert2_balance_bottom": "23.83", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.357", "all_to_all_cuda_time_ms": "4.5", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.032", "ppl": "1.02", "wps": "35831.4", "ups": "1.25", "wpb": "28560", "bsz": "952", "num_updates": "90", "lr": "1.125e-05", "gnorm": "0.123", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "79"}
2023-02-20 20:39:12 | INFO | train_inner | {"epoch": 1, "update": 0.196, "loss": "0.11", "moe_gate_loss": "6.02712", "overflow_expert1": "0", "overflow_expert2": "7.432", "entropy_gating": "1.82", "expert1_balance_top": "32.152", "expert1_balance_bottom": "24.77", "unused_expert1_count": "0", "expert2_balance_top": "33.38", "expert2_balance_bottom": "24.381", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.355", "all_to_all_cuda_time_ms": "4.047", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.023", "ppl": "1.02", "wps": "35488.6", "ups": "1.24", "wpb": "28560", "bsz": "952", "num_updates": "100", "lr": "1.25e-05", "gnorm": "0.087", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "87"}
2023-02-20 20:39:21 | INFO | train_inner | {"epoch": 1, "update": 0.215, "loss": "0.104", "moe_gate_loss": "6.01034", "overflow_expert1": "0", "overflow_expert2": "6.116", "entropy_gating": "1.819", "expert1_balance_top": "31.033", "expert1_balance_bottom": "25.795", "unused_expert1_count": "0", "expert2_balance_top": "33.276", "expert2_balance_bottom": "24.517", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.361", "all_to_all_cuda_time_ms": "4.719", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.017", "ppl": "1.01", "wps": "34931.5", "ups": "1.22", "wpb": "28560", "bsz": "952", "num_updates": "110", "lr": "1.375e-05", "gnorm": "0.065", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "95"}
2023-02-20 20:39:29 | INFO | train_inner | {"epoch": 1, "update": 0.234, "loss": "0.1", "moe_gate_loss": "6.00269", "overflow_expert1": "0", "overflow_expert2": "5.3", "entropy_gating": "1.818", "expert1_balance_top": "30.732", "expert1_balance_bottom": "26.245", "unused_expert1_count": "0", "expert2_balance_top": "33.199", "expert2_balance_bottom": "24.849", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.359", "all_to_all_cuda_time_ms": "4.607", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.014", "ppl": "1.01", "wps": "34935.1", "ups": "1.22", "wpb": "28560", "bsz": "952", "num_updates": "120", "lr": "1.5e-05", "gnorm": "0.052", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "103"}
2023-02-20 20:39:37 | INFO | train_inner | {"epoch": 1, "update": 0.253, "loss": "0.098", "moe_gate_loss": "5.99988", "overflow_expert1": "0", "overflow_expert2": "5.074", "entropy_gating": "1.816", "expert1_balance_top": "30.384", "expert1_balance_bottom": "26.709", "unused_expert1_count": "0", "expert2_balance_top": "33.193", "expert2_balance_bottom": "24.684", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.354", "all_to_all_cuda_time_ms": "3.989", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.011", "ppl": "1.01", "wps": "35011.9", "ups": "1.23", "wpb": "28560", "bsz": "952", "num_updates": "130", "lr": "1.625e-05", "gnorm": "0.042", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "111"}
2023-02-20 20:39:45 | INFO | train_inner | {"epoch": 1, "update": 0.272, "loss": "0.096", "moe_gate_loss": "5.99928", "overflow_expert1": "0", "overflow_expert2": "4.93", "entropy_gating": "1.815", "expert1_balance_top": "30.182", "expert1_balance_bottom": "26.971", "unused_expert1_count": "0", "expert2_balance_top": "33.189", "expert2_balance_bottom": "24.677", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.349", "all_to_all_cuda_time_ms": "4.112", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.009", "ppl": "1.01", "wps": "34581.3", "ups": "1.21", "wpb": "28560", "bsz": "952", "num_updates": "140", "lr": "1.75e-05", "gnorm": "0.034", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "120"}
2023-02-20 20:39:53 | INFO | train_inner | {"epoch": 1, "update": 0.291, "loss": "0.094", "moe_gate_loss": "5.99877", "overflow_expert1": "0", "overflow_expert2": "5.265", "entropy_gating": "1.813", "expert1_balance_top": "30.175", "expert1_balance_bottom": "26.977", "unused_expert1_count": "0", "expert2_balance_top": "33.54", "expert2_balance_bottom": "24.209", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.343", "all_to_all_cuda_time_ms": "4.08", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.008", "ppl": "1.01", "wps": "34489.2", "ups": "1.21", "wpb": "28560", "bsz": "952", "num_updates": "150", "lr": "1.875e-05", "gnorm": "0.029", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "128"}
2023-02-20 20:40:02 | INFO | train_inner | {"epoch": 1, "update": 0.31, "loss": "0.093", "moe_gate_loss": "5.99908", "overflow_expert1": "0", "overflow_expert2": "5.758", "entropy_gating": "1.811", "expert1_balance_top": "30.044", "expert1_balance_bottom": "27.081", "unused_expert1_count": "0", "expert2_balance_top": "33.939", "expert2_balance_bottom": "23.947", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.355", "all_to_all_cuda_time_ms": "4.363", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.006", "ppl": "1", "wps": "34184", "ups": "1.2", "wpb": "28560", "bsz": "952", "num_updates": "160", "lr": "2e-05", "gnorm": "0.024", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "136"}
2023-02-20 20:40:10 | INFO | train_inner | {"epoch": 1, "update": 0.329, "loss": "0.092", "moe_gate_loss": "5.99888", "overflow_expert1": "0", "overflow_expert2": "5.638", "entropy_gating": "1.809", "expert1_balance_top": "30.039", "expert1_balance_bottom": "27.017", "unused_expert1_count": "0", "expert2_balance_top": "33.852", "expert2_balance_bottom": "23.829", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.363", "all_to_all_cuda_time_ms": "4.831", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.005", "ppl": "1", "wps": "33619.6", "ups": "1.18", "wpb": "28560", "bsz": "952", "num_updates": "170", "lr": "2.125e-05", "gnorm": "0.02", "clip": "0", "loss_scale": "16", "train_wall": "8", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "145"}
2023-02-20 20:40:19 | INFO | train_inner | {"epoch": 1, "update": 0.348, "loss": "0.091", "moe_gate_loss": "5.99926", "overflow_expert1": "0", "overflow_expert2": "6.074", "entropy_gating": "1.807", "expert1_balance_top": "29.941", "expert1_balance_bottom": "27.214", "unused_expert1_count": "0", "expert2_balance_top": "34.041", "expert2_balance_bottom": "23.697", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.363", "all_to_all_cuda_time_ms": "4.827", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.005", "ppl": "1", "wps": "33352.1", "ups": "1.17", "wpb": "28560", "bsz": "952", "num_updates": "180", "lr": "2.25e-05", "gnorm": "0.018", "clip": "0", "loss_scale": "16", "train_wall": "9", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "153"}
2023-02-20 20:40:27 | INFO | train_inner | {"epoch": 1, "update": 0.367, "loss": "0.09", "moe_gate_loss": "5.99956", "overflow_expert1": "0", "overflow_expert2": "6.21", "entropy_gating": "1.805", "expert1_balance_top": "30.04", "expert1_balance_bottom": "27.085", "unused_expert1_count": "0", "expert2_balance_top": "34.221", "expert2_balance_bottom": "23.608", "unused_expert2_count": "0", "all_to_all_cpu_time_ms": "0.363", "all_to_all_cuda_time_ms": "5.062", "unrouted_token_rate": "0", "sparsity": "0", "inner_loss": "0.004", "ppl": "1", "wps": "33244.2", "ups": "1.16", "wpb": "28560", "bsz": "952", "num_updates": "190", "lr": "2.375e-05", "gnorm": "0.016", "clip": "0", "loss_scale": "16", "train_wall": "9", "cuda_gb_allocated": "5.2", "cuda_gb_reserved": "6.5", "cuda_gb_free": "18.4", "wall": "162"}
Traceback (most recent call last):
  File "train.py", line 14, in <module>
    cli_main()
  File "/data/lsj/moe/fairseq-moe/fairseq_cli/train.py", line 580, in cli_main
    distributed_utils.call_main(cfg, main)
  File "/data/lsj/moe/fairseq-moe/fairseq/distributed/utils.py", line 377, in call_main
    join=True,
  File "/home/lsj/anaconda3/envs/sixt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/home/lsj/anaconda3/envs/sixt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/home/lsj/anaconda3/envs/sixt/lib/python3.7/site-packages/torch/multiprocessing/spawn.py", line 136, in join
    signal_name=name
torch.multiprocessing.spawn.ProcessExitedException: process 0 terminated with signal SIGKILL
